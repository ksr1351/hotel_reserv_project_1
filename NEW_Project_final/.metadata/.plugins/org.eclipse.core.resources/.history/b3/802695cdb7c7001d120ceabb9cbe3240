package testBoard.board.controller;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import testBoard.board.dto.Hotel_ReviewDTO;
import testBoard.board.dto.ImageDTO;
import testBoard.board.service.HotelService;

@RestController
public class ReviewController {

	private final HotelService service;
	
	@Autowired
	public ReviewController(HotelService service) {
		this.service = service;
	}


	@GetMapping("/detail/getReviews")
	public Map<String, Object> HotelReviews(@RequestParam("hotel_code") String hotel_code,HttpServletResponse res){
		
		
		
		Map<String, Object> response = new HashMap<>();
		
		response.put("reviewList", service.hotel_ReviewProcess(Integer.parseInt(hotel_code)));
		response.put("rating", service.updateRatingProcess(Integer.parseInt(hotel_code)));
		
		
		return response;
	}
	
	
	@PostMapping("/insertReview")
	public String insertReview(MultipartHttpServletRequest request) {
		
		
		List<MultipartFile> files =request.getFiles("photo");
		
		List<ImageDTO> reviewImages = new ArrayList<>();
		
		//첨부된 파일 리스트를 돌면서 파일 저장 + DB 저장
		for(MultipartFile file : files) {
			
			String filename = file.getOriginalFilename();
			String filepath = "D:/k_digital_ksr/project_workspace/mainProject/src/main/webapp/resources/images/review_img/" + filename;
			
			String NewFilepath = filepath.substring(62);
			
			
			
		
			try {
				File destFile = new File(filepath);
				
				//여기로 이동해서 저장한다
				file.transferTo(destFile);
				
			} catch (IllegalStateException | IOException e) {
				
				e.printStackTrace();
			}
			
			ImageDTO reviewImage = new ImageDTO(filename, NewFilepath);
			
			reviewImages.add(reviewImage);
			
			//리뷰 사진을 제외한 DTO
			Hotel_ReviewDTO review = new Hotel_ReviewDTO();
		      review.setBooking_code(Integer.parseInt(request.getParameter("booking_code")));
		      review.setContent(request.getParameter("content"));
		      review.setRating_value(Integer.parseInt(request.getParameter("rating_value")));
			
		      service.insertReviewProcess(review, reviewImages);
		      
		      
		      
		}
		
		return "success";
	}
	
	@RequestMapping(value = "/updateReview", method = RequestMethod.PUT)
	public String updateReview(@RequestBody Hotel_ReviewDTO review) {
		
		service.updateReviewProcess(review);
		
		return "success";
	}
	
	
	@RequestMapping(value = "/deleteReview", method = RequestMethod.DELETE)
	public String deleteReview(@RequestParam("review_code")int review_code) {
		
		service.deleteReviewProcess(review_code);
		
		return "success";
	}
	
	
}









